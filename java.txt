        document.addEventListener("DOMContentLoaded", function () {
            const scoreInputs = document.querySelectorAll('input[type="number"]');
            scoreInputs.forEach((input) => {
                input.addEventListener("input", function () {
                    updateScore(this);
                });
            });

        // JavaScript function to update the winner of each round based on scores
        function updateScore(input) {
            const gameContainer = input.closest('.game');
            const scoreInputs = gameContainer.querySelectorAll('input[type="number"]');
            const score1 = parseFloat(scoreInputs[0].value);
            const score2 = parseFloat(scoreInputs[1].value);
        
            if (!isNaN(score1) && !isNaN(score2)) {
                const winnerInput = gameContainer.querySelector('input[type="text"]');
                if (score1 > score2) {
                    winnerInput.value = playerNames[gameContainer.dataset.player1 - 1];
                } else if (score2 > score1) {
                    winnerInput.value = playerNames[gameContainer.dataset.player2 - 1];
                } else {
                    winnerInput.value = "Tie";
                }
        
                // Update Semifinalist 1 input when appropriate
                if (gameContainer.classList.contains('round-1')) {
                    const round2Game = gameContainer.nextElementSibling.querySelector('.game-top input[type="text"]');
                    if (round2Game) {
                        round2Game.value = winnerInput.value;
        
                        // Move the winner to the semifinal match
                        const semifinalContainer = round2Game.closest('.round');
                        const semifinalInputs = semifinalContainer.querySelectorAll('input[type="text"]');
                        semifinalInputs.forEach((input) => {
                            if (input.value === "Semifinalist 1") {
                                input.value = winnerInput.value;
                            }
                        });
                    }
                }
            }
        }
 
        
            // Initialize the bracket when the page loads
            updateBracket();
        });
        

        